@charset "utf-8";
/* 로봇 PJ CSS -  robot.css */

/* 웹폰트 CDN */
@import url('https://fonts.googleapis.com/css2?family=Black+Ops+One&family=Orbitron:wght@500&display=swap');
/* 
    font-family: 'Black Ops One', cursive;
    font-family: 'Orbitron', sans-serif;

*/
html{
    scroll-behavior: smooth;
    /* 내부 아이디 요소 위치로 이동시 
    스크롤 애니메이션을 부드럽게 처리하는 속성!
    최상위 요소인 html에 셋팅하면 전체페이지 스크롤에 적용됨! */
}

html,body{
    margin: 0;
    padding: 0;
  
}

body{

    background: url(../images/bg.jpg) no-repeat fixed top/cover;
    padding-top: 100px;
    overflow-x: hidden;
    /* 가로 스크롤바 숨기기 */
    /* sticky 포지션을 위한 주의사항!
    overflow-x 숨기기 셋팅을 html과 동시에
    잡으면 sticky가 작동하지 않는다!
    body에만 설정할것! */
}

/* 공사중표시 */
/* body *{
    outline: 2px dashed lime;
   box-shadow: 0 0 10px 5px cyan;
} */

/* 
    [ 요소 정중앙 정렬법]
    : 포지션이 absolute 혹은 fixed일 때
    기준에 따른 정중앙 정렬법

    1. top과 left를 50%로 밀고 자기크기의 절반만큼 빼기
    예) calc(50%-특정px)
    - calc() 메서드는 css전용 계산메서드
    > 사칙연산이 모두 가능함
    여기서는 유동적인 %에서 특정px를 뺄 때 사용함
    > 주의 : 마이너스 기호 앞뒤로 반드시 띄어쓰기!

    2. top과 left를 50%로 밀고 자기크기의 절반만큼 이동하기
    ->transform : translate(-50%, -50%) 사용!
    -> -50%는 자기자신의 가로/세로 크기의 절반만큼 
    반대방향으로 이동함.

((CSS 전용 메서드))
https://www.w3schools.com/css/css_math_functions.asp
*/

/* 로봇페이지 로고 */
h1#logo{
    position: fixed;
    /* 정중앙 배치방법 1 */
    top: calc(50% - 102px);
    left: calc(50% - 102px);
    /* 102px을 뺀것은 보더 크기 고려 */
    /* fixed의 부모는 보이는 화면(window)! */

    /* 정중앙배치 방법2 */
    /* top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); */
    /* 보통은 이걸 많이 쓰나, 여기서는 로고 확대 등의 transform을 또 줄것이라
    위 방법1로 할 예정 */

    /* 크기 2배 확대 */
    transform: scale(2);

    width: 200px;
    height: 200px;
    border: 2px solid #ccc;
    border-radius: 50%;
    margin: 0;

    /* 글자가로중앙 */
    text-align: center;
    /* 글자세로중앙 - 높이값과 동일! */
    /* line-height: 200px; -> 아래 font에서 한번에 설정함.*/

    /* 글자색 */
    color: #00ff55;

    /* 글자설정 한번에! */
    /* 
    font : 스타일 두께 크기/줄간격 글자체
    font : 스두크/줄체
    */
    font: 45px/200px 'Orbitron';
    /* 글자그림자 */
    text-shadow: 2px 2px 5px #000;

    /*박스그림자 : (내부) x y 블러 (크기) 색 */
    box-shadow: 
    0 0 20px 5px pink,
    inset 0 0 20px 5px #000;

    /* 배경 */
    background: pink url(../images/robot_03.png) no-repeat;
    background-position: center 10px;
    background-size: 160px;
}

/************************************************************************  
    [css로 애니메이션 하기]
    
    -시간에 따라 CSS설정이 변경되어 애니메이션 하도록
    키프레임을 설정하고 이것을 호출함으로 의도된 연출을
    구현하는것이 css 애니메이션이다.

    [애니메이션 키프레임 만들기]
    -키프레임이란? 애니메이션 장면을 넣는 코드

    1. 두 장면 키프레임

    @keyframes 키프레임이름{
        from{시작css설정}
        to{끝나는 css설정}
    }

    또는

     @keyframes 키프레임이름{
        0%{시작css설정}
        100%{끝나는 css설정}
    }

    ->만약 from설정이 초기설정과 같다면 from생략가능

    2. 여러장면 키프레임
     @keyframes 키프레임이름{
         0%{시작css설정}
         10%{시작css설정}
         20%{시작css설정}
         ...
         80%{시작css설정}
         90%{시작css설정}
         100%{끝나는 css설정}
        }

    (1) 장면에 대한 시간계산은 어떻게 하나?
    -> 전체시간 * 설정된%/100

    (2) 전체 애니메이션 시간은 언제 셋팅하나?
    -> 호출시에 셋팅!

    [ 설정된 키프레임 호출하는 방법 ]

    animation: 이시이지반방마(二時二知半方馬)
    (이름 시간 이징 지연 반복 방향 마지막상태)

    1. 이름(animation-name) : 키프레임 이름

    2. 시간(duration) : 애니메이션 동작시간
        -> 초단위(s)

    3. 이징(animation-timing-function) : easing 가속도

    4. 지연(animation-delay) : 애니메이션 시작지연시간(s)

    5. 반복(animation-iteration) : 애니메이션 반복
        - 기본값 1, 숫자를 쓰면 숫자만큼 반복함
        - 영원히 infinite(인피니트)
    
    6. 방향(animation-direction) : 시작 -> 끝
        - 한번이상 반복할 경우 반대경로로 애니메이션을 설정
        -> alternate : 시작 -> 끝, 끝 -> 시작
    
    7. 마지막상태(animation-fill-mode) : 
        - 애니메이션이 끝났을때 처음으로 돌아가는게 기본
        -> fowards (앞쪽에..즉, 애니끝장면으로 마무리!)
        -> 기본값 : backwards(처음으로)
        -> 유의사항 : infinite(영원히) 일 때는 해당사항없음!

************************************************************************/


/* 내용보기 링크 타이틀 */
.link{
    position: absolute;
    top: 100px;
    right:50px;
    /* 부모는? 보이는화면! */

    /* 처음에 안보임 - 투명 */
    opacity: 0;

}

/* 링크 a요소 */
.link a{
    /* a요소에서 글자색, 밑줄 처리함! */
    color: green;
    text-decoration: none;
    
    /* 글자설정 한번에! */
    font: 50px 'Black Ops One', cursive;
    /* 글자그림자 */
    text-shadow: 2px 2px 2px #000;

}
/* 마우스오버시 */
.link a:hover{
    color: orangered;
    text-decoration: overline;
    /* overline 윗줄 */
}

/* 위로이동 TOP 버튼 */
.btnTop{
    position: fixed;
    bottom: 50px;
    right: 50px;
    /* 보이는 화면에 고정! */
    width: 100px;
    height: 100px;
    text-align: center;
    font: 30px/100px 'Black Ops One';
    color: blue;
    text-decoration: none;
    background-color: #ccc;
    border-radius: 50%;
    border: 5px outset #fff;

    /* 처음에 안보임 - 투명 */
    opacity: 0;
}


/* TOP버튼 오버시 */
.btnTop:hover{
    background-color: #ff0;
    color: red;
    border-style: inset;
}


/* 로봇머리 */
#head{
    position: relative;
    /* 부모자격 */
    /* 처음에는 오른쪽에 나가있음 */
    left: 100%;

    width: 250px;
    height: 250px;

    /* 마영오! 블록중앙 */
    margin: 0 auto; 
    background: url(../images/metal01.jpg) no-repeat center/cover;
    border-radius: 50px 50px 0 0;
    box-shadow: 0 0 10px 5px cyan;
}
/* 눈공통 */
.eye{
    position: absolute;
    top: 50px;
    /* 나의 부모는? #head */

    width: 50px;
    height: 50px;
    background-color: #fff;
    background-repeat: no-repeat;
    background-size: 100% 100%;
    border-radius: 50%;/* 원 */
    border: 5px double #555;
}

/* 눈1 */
#eye1{
    left: 50px;
    background-image: url(../images/e1.jpg);
}
/* 눈2 */
#eye2{
    right: 50px;
    background-image: url(../images/e2.jpg);
}

/* 코 */
#nose{
    position: absolute;
    top: 102px;
    left: 100px;
    /* 부모는? #head */

    width: 50px;
    height: 75px;
    background: url(../images/nose.jpg) no-repeat 0/110% 100%;
    border-radius: 30px;
}

/* 입 */
#mouse{
    position: absolute;
    bottom: 16px;
    left: 79px;
    /* 부모는? #head */
    width: 90px;
    height: 40px;
    background: url(../images/mouth.png) no-repeat 0/100% 100%;
}

/* 귀공통 */
.ear{
    position: absolute;
    top: 80px;
    /*  부모는? #head */
    width: 50px;
    height: 80px;
    background: url(../images/metal02.jpg) no-repeat 0/100% 100%;
    box-shadow: 0 0 10px 5px cyan;

}

/* 귀1 */
#ear1{
    left: -51px;
    border-radius: 40px 0 0 40px;
    
}
/* 귀2 */
#ear2{
    right: -51px;
    border-radius: 0 40px 40px 0;
}

/* 로봇몸 */
#body{
    position: relative;
    /* 부모자격! */

    /* 처음에는 왼쪽으로 나가있음 */
    left: -100%;
    width: 250px;
    height: 300px;
    margin: 0 auto;
    margin-top: 50px;
    margin-bottom: 370px;
    background: url(../images/metal01.jpg) no-repeat center/cover;
    border-bottom: 10px solid #222;
    box-shadow: 0 0 10px 5px cyan;
}

/* 목 */
#neck{
    position: absolute;
    top: -50px;
    left: 95px;
    /* 부모는 #body */
    width: 60px;
    height: 50px;
    background: url(../images/metal02.jpg) no-repeat 0/100% 100%;
}
/* 팔공통 */
.arm{
    position: absolute;
    top: 30px;
    /* 부모는 #body */
    width: 50px;
    height: 240px;
    background: url(../images/metal02.jpg) repeat-y 0/100%;
    box-shadow: 0 0 10px 5px cyan;
}
/* 팔1 */
#arm1{
    left: -65px;
}

/* 팔2 */
#arm2{
    right: -65px;
}
/* 가상요소로 집게손 만들기 */
.arm::before{
    content: '';
    display: block;
    position: absolute;
    bottom: -44px;
    left: -8px;
    /* 부모는? .arm */
    width: 70px;
    height: 70px;
    border: 2px solid #555;
    border-radius: 50%; /* 원 */
    /* 크기유지 : 보더박스(보더,패딩포함) */
    box-sizing: border-box;
    background-color: #ccc;
    box-shadow: 0 0 10px 5px cyan;

}
.arm::after{
    content: '';
    display: block;
    position: absolute;
    bottom: -45px;
    /* 부모는? .arm */
    left: 19px;
    width: 15px;
    height: 36px;
    background-color: #555;
    border-radius: 10px;
}

/* 다리공통 */
.leg{
    position: absolute;
    top: 310px;
    /* 부모는 #body */
    width: 50px;
    height: 300px;
    background: url(../images/metal02.jpg) repeat-y 0/100%;
    box-shadow: 0 0 10px 5px cyan;

}

/* 다리1 */
#leg1{
    left: 0;
}

/* 다리2 */
#leg2{
    right: 0;
}

/* 가상요소로 로봇발 만들기 */
.leg::before{
    content: '';
    display: block;
    position: absolute;
    bottom: -29px;
    left: -20px;
    /* 부모는? .leg */

    width: 90px;
    height: 60px;
    border: 2px solid #555;
    border-bottom: 15px solid rgb(62, 223, 126);
    
    border-radius: 40px 40px 0 0;
   
    background-color: #ccc;
    /* 크기유지 : 보더박스(보더,패딩포함) */
    box-sizing: border-box;
    box-shadow: 0 0 10px 5px cyan;
}

/* 어깨공통 */
.sh{
    position: absolute;
    top: -20px;
    /* 부모는? #body */
    width: 80px;
    height: 80px;
    background: url(../images/metal01.jpg) no-repeat center/cover;
    box-shadow: 0 0 10px 5px cyan;
}

/* 어깨1 */
#sh1{
    left: -80px;
    border-radius: 50% 5px 5px 50%;
}
/* 어깨2 */
#sh2{
    right: -80px;
    border-radius: 5px 50% 50% 5px;
}

/* tv */
#tv{
    position: absolute;
    top: 90px;
    left: 26px;
    /* 부모는? #body */

    width: 200px;
    height: 150px;
    background: url(../images/tv.jpg) no-repeat 0/100% 100%;
    border-radius: 7px;
}
/* 스크린 */
#screen{
    position: absolute;
    top: 16px;
    left: 11px;
    /* 부모는? #tv */
    width: 142px;
    height: 107px;
    background-color: #000;
    border-radius: 15px;
    /* 넘치는 자속요소 숨기기 */
    overflow: hidden;
}

/* 유튜브 아이프레임 */
#screen iframe{
    position: absolute;
    top: 0px;
    left: -30px;
    /* 부모는? #screen */

    width: 125%;
    height: 100%;

    /* 아이프레임 기본보더 없앰 */
    border: none;
}

/* 로봇 설명박스 */
#dcbx{
    width: 800px;
    /* 마영오! -가로 중앙 */
    margin: 0 auto;
    /* 하단 공간 */
    margin-bottom: 200px;
    border: 3px solid #fff;
    border-radius: 20px;
    padding: 15px 30px;
    background-color: rgba(0, 0, 0, 0.501);
    color: #fff;

    /* 글자 그림자 : x y 블러 색 */
    text-shadow: 1px 1px 1px #000;

    /* 박스 그림자 : (내부) x y 블러 (크기) 색 
    -> 박스그림자를 이용한 글로우 효과 주기!
    그림자색을 밝은 형광계열색을 준다!
    내부옵션 inset을 주면 안쪽그림자(글로우) 효과!
    -> 콤마로 그림자를 여러개 줄 수 있음
    */
    box-shadow: 
    inset 0 0 20px blue,
    inset 0 0 50px 10px cyan;

}

/* 로봇설명 제목 */
#dcbx h2{
    position: sticky;
    top : 0px;
    
    /* sticky 포지션에서 top값을 주면 보이는 화면의 위치를 체크하여
    그 위치에 올때 fixed처럼 화면에 고정해 준다 */

    font-size: 35px;
    text-align: center;
    color: lime;
    background-color: rgba(255, 255, 255, 0.42);
    border-radius: 20px;
}

#dcbx small{
    display: block;
    text-align: center;
    color: #ff0;
    font-size: 12px;
    /* 최소글자크기 한계는 10px */
    /* px은 정해서 써주는 것이 좋다 */
}

/* 설명문단 */
#dcbx p{
    font-size: 15px;
    /* 기본글자 크기는 일반적으로 16px */

    /* 줄간격 : 배수/단위 등 */
    line-height: 1.8;
    /* 자간 */
    letter-spacing: .5px;
    /* 단어간격 */
    word-spacing: 1px;

    /* 가독성을 위한 다단설정 */

    /* 다단표시(다중열속성) */
    column-count: 3;
    /* 다중열 구분선 
    -> 보더 설정값과 같음(두께 종류 색상) */
    column-rule: 5px dotted lightgreen;
    /* 다중열사이간격
    -> 구분선 오른쪽 간격조정 */
    column-gap: 55px;

    /* 문단정렬 : 양쪽정렬 */
    text-align: justify;

    /* 단어깨기 */
    word-break: break-all;
    /* 1byte 문자인 영어는 기본적으로
    단어단위로 같이 구분되어 있으므로
    문단에서 단어가 못들어가면 아랫줄로
    내려가서 중간이나 끝에 비어보임 !
    이때 단어깨기설정을 해야 단어가
    글자단위로 모두 정렬될 수 있다! */

    /* 첫 줄 들여쓰기 */
    text-indent: 20px;
}

/* 가상요소로 첫글자 디자인변경 */
#dcbx p::first-letter{
    font-size: 30px;
    font-weight: bold;
    color: salmon;
}